---
import { getCollection } from 'astro:content';
import BaseLayout from './BaseLayout.astro';
import 'github-markdown-css';
import HeaderNav from '../components/HeaderNav.astro';
import Welcome from '../components/Welcome.astro';
import MainContent from '../components/MainContent.astro';
import Footer from '../components/Footer.astro';
import '../styles/global.css';

const { pathname } = Astro.url;
let slug = '';

// /my_profile/posts/SLUG または /my_profile/posts/SLUG/ からSLUGを抽出
const slugMatch = pathname.match(/\/my_profile\/posts\/([^\/]+)\/?$/);
if (slugMatch && slugMatch[1]) {
	slug = slugMatch[1];
}
const { frontmatter } = Astro.props;

const allPosts = await getCollection('posts');
const sortedPosts = allPosts.sort((a, b) => {
	return new Date(b.data.date).getTime() - new Date(a.data.date).getTime();
});

const currentIndex = sortedPosts.findIndex((post) => post.slug === slug);
const prevPost =
	currentIndex + 1 < sortedPosts.length
		? sortedPosts[currentIndex + 1]
		: null;
const nextPost = currentIndex > 0 ? sortedPosts[currentIndex - 1] : null;

const CATEGORY_CLASSES = {
	日記: 'bg-pink-200 text-gray-800',
	メモ: 'bg-green-200 text-gray-800',
	知識: 'bg-blue-200 text-gray-800',
	仕事: 'bg-purple-200 text-gray-800',
} as const;
---

<BaseLayout>
	<article>
		<header>
			<HeaderNav />
		</header>
		<div class='container'>
			<div class='content'>
				<p
					class={`${
						frontmatter.category === 'メモ'
							? 'bg-purple-200 text-gray-800 category'
							: frontmatter.category === '日記'
								? 'bg-pink-200 text-gray-800 category'
								: frontmatter.category === '知識'
									? 'bg-blue-200 text-gray-800 category'
									: frontmatter.category === '仕事'
										? 'bg-green-200 text-gray-800 category'
										: 'bg-gray-200 text-gray-800 category'
					}`}
				>
					{frontmatter.category}
				</p>
				<h1 class='font-extrabold'>{frontmatter.title}</h1>
				<div class='metadata mb-6 text-right'>
					<time class=''>投稿日：{frontmatter.date}</time>
				</div>
				<div class='markdown-body'>
					<slot />
				</div>
			</div>
		</div>
		<nav class='post-navigation'>
			<div class='post-navigation__links'>
				{
					prevPost ? (
						<a
							href={`/my_profile/posts/${prevPost.slug}`}
							class='post-navigation__prev'
						>
							<span class='post-navigation__label'>
								← 前の記事
							</span>
							<span class='post-navigation__title'>
								{prevPost.data.title}
							</span>
						</a>
					) : (
						<div class='post-navigation__next'>
							<span class='post-navigation__label'>
								← 前の記事
							</span>
						</div>
					)
				}

				{
					nextPost ? (
						<a
							href={`/my_profile/posts/${nextPost.slug}`}
							class='post-navigation__next'
						>
							<span class='post-navigation__label'>
								次の記事 →
							</span>
							<span class='post-navigation__title'>
								{nextPost.data.title}
							</span>
						</a>
					) : (
						<div class='post-navigation__next'>
							<span class='post-navigation__label'>
								次の記事 →
							</span>
						</div>
					)
				}
			</div>
		</nav>
	</article>
	<Footer />
</BaseLayout>

<style>
	@import url('https://fonts.googleapis.com/css2?family=Bungee&display=swap');
	@import url('https://fonts.googleapis.com/css2?family=Bungee&family=Slackside+One&family=Zen+Kurenaido&display=swap');

	.markdown-body {
		background: #f5f5f5;
		min-height: 100vh;
		margin: 0;
		padding: 0;
	}

	:global(.markdown-body h3) {
		border-bottom: 0 !important; /* サイズを調整 */
		/* 他のスタイルプロパティ */
	}

	.category {
		display: inline-flex; /* または display: flex; */
		justify-content: center; /* 水平方向の中央寄せ */
		align-items: center; /* 垂直方向の中央寄せ */
		height: 20px;
		width: 4rem;
		/* background-color: aqua; */
		border-radius: 10px;
	}

	h1 {
		font-size: 2em;
	}

	article {
		/* background: #8b8b8b; */
	}

	.container {
		max-width: 1200px;
		margin: 0 auto;
		padding: 0 20px;
		display: flex;
		justify-content: center;
	}

	.markdown-body p,
	.markdown-body blockquote,
	.markdown-body ul,
	.markdown-body ol,
	.markdown-body dl,
	.markdown-body table,
	.markdown-body pre,
	.markdown-body details {
		margin-bottom: 0.5rem !important;
	}

	.content {
		width: 80%;
		max-width: 800px;
		margin: 0 auto;
		padding: 20px 0;
	}

	@media (max-width: 768px) {
		.content {
			width: 90%;
		}
	}

	/* 既存のスタイルに追加 */
	.post-navigation {
		margin: 4rem 0;
		padding: 2rem 0;
		border-top: 1px solid #eaeaea;
	}

	.post-navigation__links {
		display: flex;
		justify-content: space-between;
		gap: 2rem;
	}

	.post-navigation__prev,
	.post-navigation__next {
		flex: 1;
		text-decoration: none;
		color: inherit;
		padding: 1rem;
		border: 1px solid #eaeaea;
		border-radius: 0.5rem;
		transition: background-color 0.2s;
	}

	.post-navigation__prev:hover,
	.post-navigation__next:hover {
		background-color: #f5f5f5;
	}

	.post-navigation__label {
		display: block;
		color: #666;
		font-size: 0.875rem;
	}

	.post-navigation__title {
		display: block;
		font-weight: 600;
		margin-top: 0.5rem;
	}

	@media (max-width: 768px) {
		.post-navigation__links {
			flex-direction: column;
		}
	}
</style>
